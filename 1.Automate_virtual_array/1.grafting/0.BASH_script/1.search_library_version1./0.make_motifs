#/usr/bin/env bash
#expects MOTIF.pdb which is a formatted pdb file produced by GLYCAM.WEB containing the "rootstock" or "core" structure

#OUTPUTS
#Snmotif.txt a sourceable variable $num which is the number of motifs 
#individual sourceable motifs Smotif1_$i.txt and Smotif2_$i.txt

#note for later
#for a library hit to be successful it must contain all of the motifs
#I am ashamed of how crap this script is but glad it works.

#nomenclature
#.tmp files are removed at the end, .txt files are kept
#S stands for sourceable. nmotif is the number of motifs

#counts number of motifs 
cat MOTIF.pdb | grep LINK\ | grep -c -v ROH > nmotifs.tmp
awk '{print"num=\"",$1"\""}' nmotifs.tmp > Snmotif.tmp
cat Snmotif.tmp | sed s'/\ //'g > Snmotif.txt #removes the space

#num='more n.motifs.txt'
source Snmotif.txt


cat MOTIF.pdb | grep LINK\ | grep -v ROH > motifs.tmp

for ((i=1;i<=$num;i++))

do
awk "NR==$i" motifs.tmp > motif_$i.tmp

#FOR RESIDUE 1
awk '{print"m1_link=\"",$2"\""}' motif_$i.tmp > linkage1.tmp
cat linkage1.tmp | sed 's/\ //g' > m1_linkage.tmp #removes the space
#now gets the linkage residue name
awk '{print"",$3}' motif_$i.tmp > m1.tmp
cat m1.tmp | cut -c 3-4 > m11.tmp
awk '{print"m1_name=\".",$1"\""}' m11.tmp > m111.tmp
cat m111.tmp | sed 's/\ //g' > m1_name.tmp
source m1_name.tmp
source m1_linkage.tmp
echo "motif1=\"$m1_link  $m1_name\"" > Smotif1_$i.txt

#FOR RESIDUE 2
awk '{print"m2_link=\"",$5"\""}' motif_$i.tmp > linkage2.tmp
cat linkage2.tmp | sed 's/\ //g' > m2_linkage.tmp #removes the space before atom name
#now gets the linkage residue name
awk '{print"",$6}' motif_$i.tmp > m2.tmp
cat m2.tmp | cut -c 3-4 > m22.tmp
awk '{print"m2_name=\".",$1"\""}' m22.tmp > m222.tmp
cat m222.tmp | sed 's/\ //g' > m2_name.tmp
source m2_name.tmp
source m2_linkage.tmp
echo "motif2=\"$m2_link  $m2_name\"" > Smotif2_$i.txt

done
rm -rf 9.MOTIFS
mkdir 9.MOTIFS
mv S*motif*.txt 9.MOTIFS
rm *.tmp 2>/dev/null
