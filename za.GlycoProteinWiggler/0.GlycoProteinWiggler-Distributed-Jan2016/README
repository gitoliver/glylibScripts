The glycoproteinWiggler adds 3D structures of glycans to Asn residues in a 3D protein structure. 
You can either use the glycans in 1.Glycan3DLibrary or you may add your own glycans to the library by following the instructions under the 0.createPetrscuTorsions section. 
If the glycan you wish to add is already in 1.Glycan3DLibrary you may skip to the 2.glycoProteinWiggler section of this document. 

********************************************************************************************************************
Installation
********************************************************************************************************************

cd Glylib_May2012/lib
make

cd 0.createPetrscuTorsions/
vim makefile 
    edit GLYHOME on line 1 to your PATH. This information is obtained from doing 'pwd' in the Glylib_May2012 folder
make

vim generatePetrescu.sh
    edit export PATH on line 2 to your PATH to 0.createPetrscuTorsions. Use 'pwd' in 0.createPetrscuTorsions

cd 2.glycoProteinWiggler/
vim makefile
    edit GLYHOME on line 1 to your PATH. This information is obtained from doing 'pwd' in the Glylib_May2012 folder
make

cd 3.RunningOnComputeCluster/
vim 0.GPB-setup.sh
    edit BUILDERHOME on line 29 to your PATH to the glycoProteinWiggler.exe executable

********************************************************************************************************************
Usage
********************************************************************************************************************
0.createPetrscuTorsions
The glycoprotein builder checks the four shapes of the Asn sidechain that predominate when a glycan is attached. 
In this folder, each of the four Asn shapes, denoted P1 to P4, are attached to a pregenerated 3D glycan.
Note that glycans themselves can also have multiple 3D shapes, creating lots of permutations to cover.
Run generatePeterscu.sh for a usage statement. 
Example inputs and outputs are in 0.Inputs and 1.Outputs.

1.Glycan3DLibrary
Glycans 3D structures that have been prepared in 0.createPetrscuTorsions are stored here. 

2.glycoProteinWiggler
The actual program. Run glycoProteinWiggler.exe for a usage statement and check out example_input.txt. 
You must provide: 
    a protein 3D structure 
    a folder containing the glycans (i.e. 1.Glycan3DLibrary)
    the Asn residue numbers you want to attach to (no automatic detection of sequons)
    the name of the glycan you want to attach. Be careful that the name matches the start of the name of the glycan file. 
        e.g. m9 will match to m9-* in the glycan folder, while m9-gtgt will cause just that rotamer to be added.
        Note that for each protein residue number provided a glycan must be detailed. Allowing you to add different glycans to different sites.
WARNING! Don't attempt to add to more than 5 sites at once. My program has memory bugs probably related to not closing files.
For simple projects running on your PC you may use this program. For more complicated projects, see the next section.

3.RunningOnComputeCluster
When adding multiple different glycans or to more than 5 sites it becomes much easier to run on a CPU cluster. 
For each glycan type the script will submit a unique job. 
Edit submit.template to work with your queueing system and cluster
Run 0.GPB-setup.sh for usage
    models  - a folder containing your protein. You may have multiple models from homology modeling in here.
    glycans - a folder containing the glycans.
    glylist - a list of the glycans you want to add to EACH site. see 0.example_glylist.txt. Note mixing glycan types is not possible.
    reslist - a list of all the Asn residues you want to add glycans to.
    jobName - specific to PBS queueing system. This name will appear on the queue. 
    folderNumber - Optional! Provide a number to start numbering the folders generated by the program
Run ./1.check_results.sh to get a summary once the jobs have completed. See 1.example_Results.txt for example output.
 
